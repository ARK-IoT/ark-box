#! /bin/sh
# /etc/init.d/arkbox

### BEGIN INIT INFO
# Provides:          arkbox
# Required-Start:    $all
# Required-Stop:     $network $local_fs
# Default-Start:     2 3 4 5
# Default-Stop:      6 1 0
# Short-Description: All services around ARKBOX_FOLDER
# Description:       Based on /opt/arkbox/conf/arkbox.conf starts several services
### END INIT INFO
###
#  Default start-stop script for arkbox services on a laptop
#   written by Matthias Strubel  (matthias.strubel@aod-rpg.de) 2011-02-22
#	adapted by sleepdeficit (simon@sleepdev.sh) 2017
#  licenced by gpl, feel free to improve and send me comments
###

. /lib/lsb/init-functions

[ -f /etc/default/rcS ] && . /etc/default/rcS

# PATH for /opt arkbox folder
PATH=$PATH:/opt/arkbox/bin

PIDFILE_HOSTAPN=/var/run/arkbox_hostapn.pid
PIDFILE_DNSMASQ=/var/run/arkbox_dnsmasq.pid
PIDFILE_LIGHTTPD=/opt/arkbox/tmp/lighttpd.pid
PIDFILE_RADVD=/opt/arkbox/tmp/radvd.pid

ARKBOX=/opt/arkbox
CONF=$ARKBOX/conf/arkbox.conf
CONF_APN=$ARKBOX/conf/hostapd.conf

#Some extra config files for dnsmasq
CONF_DNSMASQ=$ARKBOX/conf/dnsmasq_generated.conf

CONF_RADVD=$ARKBOX/conf/radvd_generated.conf

CONF_LIGHTTPD=$ARKBOX/conf/lighttpd/lighttpd.conf

export PYTHONPATH=:$PYTHONPATH:$ARKBOX_PYTHONPATH

# Some things that run always
touch /var/lock/arkbox

if [ -f $CONF ] ; then
   . $CONF
else
   log_failure_msg "Configuration file not found"
   exit 1
fi

if [ -f $ARKBOX/conf/init_done ] ; then
   INIT=OK
else
   $ARKBOX/bin/hooks/hook_pre_init.sh  "$CONF"
   $ARKBOX/bin/install_arkbox.sh "$CONF" part2
   $ARKBOX/bin/hooks/hook_post_init.sh  "$CONF"
   touch   $ARKBOX/conf/init_done
fi

# Recreate the content folder, if it was deleted
#  only if it is not already existing.
#  This can be any time.
if [ ! -d  $WWW_CONTENT ] ; then
	$ARKBOX/bin/install_arkbox.sh "$CONF" content
fi

# Command Line for DNSMASQ,  use extra config file generated from command above
CMD_DNSMASQ="-x $PIDFILE_DNSMASQ -C $CONF_DNSMASQ "

# Carry out specific functions when asked to by the system
case "$1" in
  start)
    log_daemon_msg "Starting script arkbox "
    echo ""

    # Generate hosts & dnsmasq file
    $ARKBOX/bin/generate_config_files.sh  "$CONF"

    $ARKBOX/bin/hooks/hook_arkbox_start.sh  "$CONF"


    if [ "$DO_IW" = "yes" ] ; then
       log_daemon_msg " Setting up Interface (iw) "
       iw $PHY_IF interface add $INTERFACE type managed
    fi

    if [ "$PROBE_INTERFACE" = yes ] ; then
      log_daemon_msg "  Probing wlan"
      #Setting up WLAN Interface
      arkbox_setup_wlan.sh  $CONF probe
    fi
     if  [ $? -ne 0 ] ;  then
       log_failure_msg "failed probe Interface"
     else

       # Only  activate
       if  [ "$USE_APN" =  "yes" ] ;  then
         log_daemon_msg  "Starting hostap... "
         start-stop-daemon -m --start --background --pidfile $PIDFILE_HOSTAPN  --exec /usr/sbin/hostapd --  $CONF_APN
         log_end_msg $?
       fi

      if [ "$DO_IFCONFIG" = yes ] ; then
	log_daemon_msg "  Setting up wlan"
        #Setting up WLAN Interface
        arkbox_setup_wlan.sh  $CONF start
        if  [ $? -ne 0 ] ;  then
          log_failure_msg "failed setting up Interface"
	  exit 99
        fi
      fi

      #BRIDGE
      if [ "$DO_BRIDGE" = "yes"  ] ; then
         log_daemon_msg  "Adding $INTERFACE to bridge $BRIDGE //  brctl addif $BRIDGE  $INTERFACE "
         sleep 1
         BR_CMD="brctl addif  $BRIDGE  $INTERFACE"
         ( $BR_CMD ; )
         log_end_msg $?
      fi

       if [ "$USE_DNSMASQ" = "yes" ] ;  then
         log_daemon_msg  "Starting dnsmasq... "
   # pidfile is written by dnsmasq
         start-stop-daemon --start --quiet --exec /usr/sbin/dnsmasq  --  $CMD_DNSMASQ
         log_end_msg $?
       fi

       #Setting up firewall rules
       log_daemon_msg    "Setting up firewall rules..."
       $ARKBOX_FOLDER/bin/firewall.sh -s
       log_end_msg $?


	if [ "$IPV6_ENABLE" = "yes" ] && [ "$IPV6_ADVERT" = "radvd" ] ; then
	  log_daemon_msg "Starting radvd..."
	  start-stop-daemon --start --quiet --exec radvd  -- -p $PIDFILE_RADVD -C $CONF_RADVD
	  log_end_msg $?
 	fi

   #Start here the lighttpd i.e.
   log_daemon_msg "Starting lighttpd..."
   start-stop-daemon --start --quiet  --pidfile $PIDFILE_LIGHTTPD --exec /usr/sbin/lighttpd -- -f $CONF_LIGHTTPD
   log_end_msg $?

fi
     $ARKBOX/bin/hooks/hook_arkbox_start_done.sh  "$CONF"

    ;;
  stop)
    log_daemon_msg  "Stopping script arkbox"
    echo ""

     $ARKBOX/bin/hooks/hook_arkbox_stop.sh  "$CONF"


    log_daemon_msg "Stopping lighttpd..."
    start-stop-daemon --stop --retry 30 --quiet --pidfile $PIDFILE_LIGHTTPD
    log_end_msg $?

   
     if [ "$DO_IFCONFIG" = yes ] ; then
       arkbox_setup_wlan.sh $CONF stop
     fi

     if [ "$DO_IW" = "yes" ] ; then
        iw dev $INTERFACE del
     fi

     # REMOVE BRIDGE
     if [ "$DO_BRIDGE" = "yes"  ] ; then
         log_daemon_msg "Remove Bridge..."
         BR_CMD="brctl delif  $BRIDGE  $INTERFACE"
         ( $BR_CMD ; )
         log_end_msg $?
     fi

      $ARKBOX/bin/hooks/hook_arkbox_stop_done.sh  "$CONF"

    ;;
  *)
    echo "Usage: /etc/init.d/arkbox {start|stop}"
    exit 1
    ;;
esac

exit 0
